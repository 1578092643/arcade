PRINT - Call as print("Your text here"), print's text to screen.

TEXTURE - Defines an image as a texture to overlay onto an object drawn on the screen. Useful to make sprites or backgrounds.

TRIM_IMAGE - Trims an image to fit a specified size. Useful to crop out extra white space from an image.

DRAW_ARC_FILLED - Draws an arc on screen that is filled in on screen.

DRAW_ARC_OUTLINE - Draws an outline of an arc on screen.

DRAW_CIRCLE_FILLED - Draws a filled in circle on screen.

DRAW_CIRCLE_OUTLINE - Draws an outline of a cirlce on screen.

DRAW_ELLIPSE_FILLED - Draws a filled in ellipse on screen.

DRAW_ELLIPSE_OUTLINE - Draws an ellipse outline on screen.

DRAW_LINE - Draws a line on screen.

DRAW_LINE_STRIP - Draws a list of points on screen, connects them.

DRAW_LINES - Draws a list of lines on screen.

DRAW_POINT - Draws a point on screen.

DRAW_POINTS - Draws a list of points on screen.

DRAW_POLYGON_FILLED - Draws a polygon from a list of points, connects them, fills in shape on screen.

DRAW_POLYGON_OUTLINE - Draws a polygon from a list of points, connects them, leaves as an outline on screen.

DRAW_RECT_FILLED - Draws a filled rectable on screen.

DRAW_RECT_OUTLINE - Draws an outline of a rectangle on screen.

DRAW_TEXT - Draws text onto the screen.

LOAD_TEXTURES - Takes in an image, and a list of areas in the image, and loads the specified areas of that image as textures.

LOAD_TEXTURE - Takes an image, size, and x y coordinates. Creates a texture from the specified x and y coordinates, then fits it to specified size.

DRAW_TEXTURE_RECT - Draws a textured rectangle ons screen, takes an image, x y coordinates of rectangle, size of rectangle.

FOR - Keyword that instructs computer to perform a set of actions for each object in a set of object. Ex. for letter in word: print(letter)

WHILE - Keyword that instructs computer to perform a set of actions while a condition is true or false. Ex. while i < 100: i++

ARCADE_HELPER - Function that takes in function names or keywords. Prints information from a dictionary to the user.

IMPORT - Function that adds in functionality from another file or library. Ex. import math_functions allows you to use functions defined in a file named math_functions.

AS - Gives a variable name to certain objects. Ex. import math_functions as mu will allow calls such as mu.add_all_integer_variables.

RETURN - Returns the value of something from within a function. Ex. new_int = add_nums(1,5), where def add_nums(x,y): return(x+y), new_int will be created with the value of 6.

AND - Used to specifiy multiple conditions. Ex. while i > 100 and i < 110: return True

OR - Used to specify what to do when either of a given condition are met. Ex. if i == 100 or i == 200: return True

IF - Used to check conditions of variables, functions. Ex. if i == 100: print("i = "+i)

VARIABLE - A user defined object or piece of data. Ex. i = 100, boolean1 = True, etc.

FUNCTION - A set of instructions that takes in variables as arguments, follows specified steps to return an answer to user.

DEF - Keyword used to define a function. Ex. def my_function(x,y):

