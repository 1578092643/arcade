name: test

on:
  push:
    branches: [development, maintenance, actions-test]
  pull_request:
    branches: [development, maintenance]
  workflow_dispatch:

jobs:

  build1:
    name: test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']
        architecture: ['x64']

    steps:
      - uses: actions/checkout@v2      
      - name: setup
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: update-setuptools
        run: |
          python -m pip install -U pip wheel setuptools
      - name: install-arcade
        run: |
          python -m pip install -e .[dev]
      - name: inspection-code-flake8
        run: | 
          flake8 arcade
      - name: inspection-code-mypy
        run: | 
          mypy arcade

  build2:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install 7zip
      run: choco install 7zip.install

    - name: Install Mesa
      shell: cmd
      run: |
        curl.exe -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/20.3.2/mesa3d-20.3.2-release-msvc.7z
        "C:\Program Files\7-Zip\7z.exe" x mesa.7z
        mklink opengl32.dll "x64\opengl32.dll"
        mklink libglapi.dll "x64\libglapi.dll"
      working-directory: build\tests\Debug

    - name: Configure
      run: cmake -Bbuild -T host=x64 -A x64

    - name: Build
      run: cmake --build build --config Debug -j4

    - name: Run tests
      shell: cmd
      run: call "build\Debug\TestGL.exe"